version: '3.8'

services:
  dev:
    container_name: nestjs_api_dev
    image: nestjs-api-dev:1.0.0
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile
    command: npm run start:debug
    ports:
      - ${PORT}:${PORT}
      - 9229:9229
    depends_on:
      - postgres
    networks:
      - nestjs-network
    volumes:
      - .:/usr/app
      - /usr/app/node_modules
    restart: unless-stopped
  prod:
    container_name: nestjs_api_prod
    image: nestjs-api-prod:1.0.0
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - ${PORT}:${PORT}
      - 9229:9229
    depends_on:
      - postgres
    networks:
      - nestjs-network
    volumes:
      - .:/usr/app
      - /usr/app/node_modules
    restart: unless-stopped
  postgres:
    build: ./database/
    image: denzeldocker/docker-postgres
    restart: always
    volumes:
      - ./database/postgres_data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - nestjs-network

networks:
  nestjs-network:
    driver: bridge
